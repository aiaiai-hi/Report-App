import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from datetime import datetime, timedelta
import random

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞–º–∏",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ session_state
if 'reports_data' not in st.session_state:
    st.session_state.reports_data = [
        {
            'id': 1,
            'name': '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç Q1',
            'department': '–§–∏–Ω–∞–Ω—Å—ã',
            'owner': '–ò–≤–∞–Ω–æ–≤ –ò.–ò.',
            'status': '–ê–∫—Ç—É–∞–ª—å–Ω—ã–π',
            'last_update': datetime.now() - timedelta(days=5),
            'next_update': datetime.now() + timedelta(days=25),
            'completion': 95
        },
        {
            'id': 2,
            'name': '–û—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º',
            'department': '–ü—Ä–æ–¥–∞–∂–∏',
            'owner': '–ü–µ—Ç—Ä–æ–≤ –ü.–ü.',
            'status': '–¢—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
            'last_update': datetime.now() - timedelta(days=35),
            'next_update': datetime.now() + timedelta(days=5),
            'completion': 70
        },
        {
            'id': 3,
            'name': 'HR –æ—Ç—á–µ—Ç',
            'department': 'HR',
            'owner': '–°–∏–¥–æ—Ä–æ–≤–∞ –°.–°.',
            'status': '–ê–∫—Ç—É–∞–ª—å–Ω—ã–π',
            'last_update': datetime.now() - timedelta(days=10),
            'next_update': datetime.now() + timedelta(days=20),
            'completion': 100
        }
    ]

if 'feedback_data' not in st.session_state:
    st.session_state.feedback_data = []

if 'admin_mode' not in st.session_state:
    st.session_state.admin_mode = False

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
st.sidebar.title("üìä –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞–º–∏")

# –ö–Ω–æ–ø–∫–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
if st.sidebar.button("üîß –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", key="admin_toggle"):
    st.session_state.admin_mode = not st.session_state.admin_mode

# –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
main_pages = [
    "üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ç—á–µ—Ç–∞–º",
    "‚ö° –î–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–∞–º–∏", 
    "üè∑Ô∏è –ê—Ç—Ä–∏–±—É—Ç—ã –∏ —Ç–µ—Ä–º–∏–Ω—ã",
    "üìà –î–∞—à–±–æ—Ä–¥ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏",
    "ü§ñ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å",
    "üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"
]

# –ê–¥–º–∏–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã
admin_pages = [
    "üîç –ö–æ–Ω—Ç—Ä–æ–ª—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏",
    "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏", 
    "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"
]

# –í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
if st.session_state.admin_mode:
    all_pages = main_pages + ["---"] + admin_pages
else:
    all_pages = main_pages

selected_page = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É:", all_pages)

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
if selected_page == "üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ç—á–µ—Ç–∞–º":
    st.title("üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ç—á–µ—Ç–∞–º")
    
    tab1, tab2, tab3, tab4 = st.tabs(["üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", "üìù –®–∞–±–ª–æ–Ω—ã", "üöÄ –° —á–µ–≥–æ –Ω–∞—á–∞—Ç—å", "‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã"])
    
    with tab1:
        st.header("–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è")
        st.markdown("""
        ### –û–±—â–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã —Å –æ—Ç—á–µ—Ç–∞–º–∏
        
        1. **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç—á–µ—Ç–∞**: –ö–∞–∂–¥—ã–π –æ—Ç—á–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —á–µ—Ç–∫—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–∞–º–∏
        2. **–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å**: –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —á–∞—Å—Ç–æ—Ç—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞
        3. **–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å**: –ù–∞–∑–Ω–∞—á—å—Ç–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –æ—Ç—á–µ—Ç–∞
        4. **–ê—Ç—Ä–∏–±—É—Ç—ã**: –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        
        ### –ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –æ—Ç—á–µ—Ç–∞
        - –°–æ–∑–¥–∞–Ω–∏–µ ‚Üí –ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ ‚Üí –ü—Ä–æ–≤–µ—Ä–∫–∞ ‚Üí –ü—É–±–ª–∏–∫–∞—Ü–∏—è ‚Üí –ê–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è
        """)
        
        with st.expander("–ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è"):
            st.markdown("""
            - –û—Ç—á–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –Ω–µ —Ä–µ–∂–µ —á–µ–º —Ä–∞–∑ –≤ –º–µ—Å—è—Ü
            - –í—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã  
            - –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö
            - –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
            """)
    
    with tab2:
        st.header("–®–∞–±–ª–æ–Ω—ã –æ—Ç—á–µ—Ç–æ–≤")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.subheader("üìä –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã")
            st.download_button(
                label="–°–∫–∞—á–∞—Ç—å —à–∞–±–ª–æ–Ω —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞",
                data="–®–∞–±–ª–æ–Ω —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ (–∑–∞–≥–ª—É—à–∫–∞)",
                file_name="financial_report_template.xlsx",
                mime="application/vnd.ms-excel"
            )
            
            st.subheader("üìà –û—Ç—á–µ—Ç—ã –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º")
            st.download_button(
                label="–°–∫–∞—á–∞—Ç—å —à–∞–±–ª–æ–Ω –æ—Ç—á–µ—Ç–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º", 
                data="–®–∞–±–ª–æ–Ω –æ—Ç—á–µ—Ç–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º (–∑–∞–≥–ª—É—à–∫–∞)",
                file_name="sales_report_template.xlsx",
                mime="application/vnd.ms-excel"
            )
        
        with col2:
            st.subheader("üë• HR –æ—Ç—á–µ—Ç—ã")
            st.download_button(
                label="–°–∫–∞—á–∞—Ç—å —à–∞–±–ª–æ–Ω HR –æ—Ç—á–µ—Ç–∞",
                data="–®–∞–±–ª–æ–Ω HR –æ—Ç—á–µ—Ç–∞ (–∑–∞–≥–ª—É—à–∫–∞)", 
                file_name="hr_report_template.xlsx",
                mime="application/vnd.ms-excel"
            )
            
            st.subheader("üîß –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã")
            st.download_button(
                label="–°–∫–∞—á–∞—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω",
                data="–®–∞–±–ª–æ–Ω –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ (–∑–∞–≥–ª—É—à–∫–∞)",
                file_name="operations_report_template.xlsx", 
                mime="application/vnd.ms-excel"
            )
    
    with tab3:
        st.header("üöÄ –° —á–µ–≥–æ –Ω–∞—á–∞—Ç—å")
        
        st.markdown("""
        ### –ü–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞:
        
        **–®–∞–≥ 1: –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ**
        - –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ü–µ–ª—å –æ—Ç—á–µ—Ç–∞
        - –í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é
        - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        
        **–®–∞–≥ 2: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞**
        - –°–∫–∞—á–∞–π—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —à–∞–±–ª–æ–Ω
        - –°–æ–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
        - –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        
        **–®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ**
        - –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        - –î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏ –∞—Ç—Ä–∏–±—É—Ç—ã
        - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
        
        **–®–∞–≥ 4: –ü—É–±–ª–∏–∫–∞—Ü–∏—è**
        - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—á–µ—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
        - –ü–æ–ª—É—á–∏—Ç–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è
        - –û–ø—É–±–ª–∏–∫—É–π—Ç–µ –æ—Ç—á–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ
        """)
        
        st.info("üí° **–°–æ–≤–µ—Ç**: –ù–∞—á–Ω–∏—Ç–µ —Å –ø—Ä–æ—Å—Ç–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É—Å–ª–æ–∂–Ω—è–π—Ç–µ –µ–≥–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É")
    
    with tab4:
        st.header("‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
        
        with st.expander("–ö–∞–∫ —á–∞—Å—Ç–æ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å –æ—Ç—á–µ—Ç?"):
            st.write("–ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞. –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã - –µ–∂–µ–º–µ—Å—è—á–Ω–æ, –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ - –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ.")
        
        with st.expander("–ö—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ—Ç—á–µ—Ç–∞?"):
            st.write("–í–ª–∞–¥–µ–ª—å—Ü–µ–º –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫, –∏–º–µ—é—â–∏–π –¥–æ—Å—Ç—É–ø –∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º –¥–∞–Ω–Ω—ã–º –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –∏—Ö –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å.")
        
        with st.expander("–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –æ—Ç—á–µ—Ç –Ω–µ –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –≤–æ–≤—Ä–µ–º—è?"):
            st.write("–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –∫—Ä–∏—Ç–∏—á–Ω–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        
        with st.expander("–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é –æ—Ç—á–µ—Ç–∞?"):
            st.write("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–¥–µ–ª '–î–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–∞–º–∏' ‚Üí '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å'. –í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å.")

elif selected_page == "‚ö° –î–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–∞–º–∏":
    st.title("‚ö° –î–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–∞–º–∏")
    
    action = st.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        ["–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π", "–û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π", "–°–º–µ–Ω–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞", "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å"]
    )
    
    if action == "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π":
        st.subheader("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞")
        
        with st.form("new_report_form"):
            col1, col2 = st.columns(2)
            
            with col1:
                report_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ *")
                department = st.selectbox("–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç *", ["–§–∏–Ω–∞–Ω—Å—ã", "–ü—Ä–æ–¥–∞–∂–∏", "HR", "–ò–¢", "–û–ø–µ—Ä–∞—Ü–∏–∏"])
                owner = st.text_input("–í–ª–∞–¥–µ–ª–µ—Ü –æ—Ç—á–µ—Ç–∞ *")
                
            with col2:
                report_type = st.selectbox("–¢–∏–ø –æ—Ç—á–µ—Ç–∞", ["–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π", "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π", "–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π", "–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π"])
                frequency = st.selectbox("–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", ["–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ", "–ï–∂–µ–º–µ—Å—è—á–Ω–æ", "–ï–∂–µ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ", "–ü–æ –∑–∞–ø—Ä–æ—Å—É"])
                priority = st.selectbox("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç", ["–í—ã—Å–æ–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–ù–∏–∑–∫–∏–π"])
            
            description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞")
            
            submit_button = st.form_submit_button("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç")
            
            if submit_button:
                if report_name and department and owner:
                    new_report = {
                        'id': len(st.session_state.reports_data) + 1,
                        'name': report_name,
                        'department': department,
                        'owner': owner,
                        'status': '–ù–æ–≤—ã–π',
                        'last_update': datetime.now(),
                        'next_update': datetime.now() + timedelta(days=30),
                        'completion': 0
                    }
                    st.session_state.reports_data.append(new_report)
                    st.success(f"‚úÖ –û—Ç—á–µ—Ç '{report_name}' —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")
                else:
                    st.error("‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (–æ—Ç–º–µ—á–µ–Ω—ã *)")
    
    elif action == "–û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π":
        st.subheader("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –æ—Ç—á–µ—Ç–∞")
        
        report_names = [f"{r['name']} (ID: {r['id']})" for r in st.session_state.reports_data]
        selected_report = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç—á–µ—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", report_names)
        
        if selected_report:
            report_id = int(selected_report.split("ID: ")[1].split(")")[0])
            report = next(r for r in st.session_state.reports_data if r['id'] == report_id)
            
            with st.form("update_report_form"):
                st.write(f"**–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:** {report['status']}")
                st.write(f"**–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:** {report['last_update'].strftime('%d.%m.%Y')}")
                
                new_completion = st.slider("–ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç–∏", 0, 100, report['completion'])
                update_notes = st.text_area("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é")
                
                if st.form_submit_button("–û–±–Ω–æ–≤–∏—Ç—å –æ—Ç—á–µ—Ç"):
                    report['completion'] = new_completion
                    report['last_update'] = datetime.now()
                    if new_completion == 100:
                        report['status'] = '–ê–∫—Ç—É–∞–ª—å–Ω—ã–π'
                    st.success("‚úÖ –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
                    st.rerun()
    
    elif action == "–°–º–µ–Ω–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞":
        st.subheader("üë§ –°–º–µ–Ω–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –æ—Ç—á–µ—Ç–∞")
        
        report_names = [f"{r['name']} (–í–ª–∞–¥–µ–ª–µ—Ü: {r['owner']})" for r in st.session_state.reports_data]
        selected_report = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç—á–µ—Ç:", report_names)
        
        if selected_report:
            new_owner = st.text_input("–ù–æ–≤—ã–π –≤–ª–∞–¥–µ–ª–µ—Ü:")
            reason = st.text_area("–ü—Ä–∏—á–∏–Ω–∞ —Å–º–µ–Ω—ã –≤–ª–∞–¥–µ–ª—å—Ü–∞:")
            
            if st.button("–°–º–µ–Ω–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞"):
                if new_owner:
                    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –≤ –¥–∞–Ω–Ω—ã—Ö
                    report_name = selected_report.split(" (–í–ª–∞–¥–µ–ª–µ—Ü:")[0]
                    for report in st.session_state.reports_data:
                        if report['name'] == report_name:
                            old_owner = report['owner']
                            report['owner'] = new_owner
                            break
                    
                    st.success(f"‚úÖ –í–ª–∞–¥–µ–ª–µ—Ü –∏–∑–º–µ–Ω–µ–Ω —Å {old_owner} –Ω–∞ {new_owner}")
                else:
                    st.error("‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤–æ–≥–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞")
    
    elif action == "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å":
        st.subheader("ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞")
        
        report_names = [r['name'] for r in st.session_state.reports_data]
        selected_report = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç—á–µ—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏:", report_names)
        
        if selected_report:
            col1, col2 = st.columns(2)
            
            with col1:
                st.markdown("#### –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö")
                data_source = st.selectbox("–¢–∏–ø –∏—Å—Ç–æ—á–Ω–∏–∫–∞:", ["–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö", "API", "–§–∞–π–ª Excel", "Google Sheets"])
                connection_string = st.text_input("–°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:")
                
            with col2:
                st.markdown("#### –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏")
                auto_frequency = st.selectbox("–ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", ["–ï–∂–µ–¥–Ω–µ–≤–Ω–æ", "–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ", "–ï–∂–µ–º–µ—Å—è—á–Ω–æ"])
                notification = st.checkbox("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ")
                
            st.markdown("#### –°—Ü–µ–Ω–∞—Ä–∏–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö")
            processing_script = st.text_area("Python —Å–∫—Ä–∏–ø—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):", height=100)
            
            if st.button("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é"):
                st.success("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞! –û—Ç—á–µ—Ç –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.")
                st.info("‚ÑπÔ∏è –ü–µ—Ä–≤–æ–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ –∑–∞–≤—Ç—Ä–∞.")

elif selected_page == "üè∑Ô∏è –ê—Ç—Ä–∏–±—É—Ç—ã –∏ —Ç–µ—Ä–º–∏–Ω—ã":
    st.title("üè∑Ô∏è –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –∏ —Ç–µ—Ä–º–∏–Ω–æ–≤")
    
    tab1, tab2 = st.tabs(["üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä —à–∞–±–ª–æ–Ω–æ–≤", "üß† –ü–æ–¥–±–æ—Ä —Ç–µ—Ä–º–∏–Ω–æ–≤ –ò–ò"])
    
    with tab1:
        st.subheader("–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä —à–∞–±–ª–æ–Ω–∞ COS –≤ —Ñ–æ—Ä–º–∞—Ç –∞—Ç—Ä–∏–±—É—Ç–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞")
        
        uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ COS —à–∞–±–ª–æ–Ω", type=['xlsx', 'xls', 'csv'])
        
        if uploaded_file is not None:
            st.success("‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            
            col1, col2 = st.columns(2)
            
            with col1:
                st.markdown("#### –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏")
                mapping_type = st.selectbox("–¢–∏–ø –º–∞–ø–ø–∏–Ω–≥–∞:", ["–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π", "–†—É—á–Ω–æ–π", "–°–º–µ—à–∞–Ω–Ω—ã–π"])
                include_metadata = st.checkbox("–í–∫–ª—é—á–∏—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ", value=True)
                validate_structure = st.checkbox("–í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É", value=True)
                
            with col2:
                st.markdown("#### –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä")
                st.info("–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ 15 –ø–æ–ª–µ–π –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏")
                st.info("–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö: —Ç–µ–∫—Å—Ç (8), —á–∏—Å–ª–æ–≤—ã–µ (5), –¥–∞—Ç—ã (2)")
                
            if st.button("–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å"):
                with st.spinner("–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ..."):
                    import time
                    time.sleep(2)
                
                st.success("‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                
                # –ü—Ä–∏–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                result_data = {
                    '–ê—Ç—Ä–∏–±—É—Ç': ['–ù–∞–∑–≤–∞–Ω–∏–µ', '–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç', '–í–ª–∞–¥–µ–ª–µ—Ü', '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è', '–°—Ç–∞—Ç—É—Å'],
                    '–¢–∏–ø': ['–¢–µ–∫—Å—Ç', '–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', '–î–∞—Ç–∞', '–ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ'],
                    '–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π': [True, True, True, True, False],
                    '–û–ø–∏—Å–∞–Ω–∏–µ': ['–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞', '–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ', '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π', '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è', '–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å']
                }
                
                df_result = pd.DataFrame(result_data)
                st.dataframe(df_result, use_container_width=True)
                
                st.download_button(
                    label="–°–∫–∞—á–∞—Ç—å –∞—Ç—Ä–∏–±—É—Ç–Ω—ã–π —Å–æ—Å—Ç–∞–≤",
                    data=df_result.to_csv(index=False),
                    file_name="attributes_structure.csv",
                    mime="text/csv"
                )
    
    with tab2:
        st.subheader("–ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ —Ç–µ—Ä–º–∏–Ω–æ–≤")
        
        context_input = st.text_area(
            "–û–ø–∏—à–∏—Ç–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ—Ç—á–µ—Ç–∞ –∏–ª–∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç —Ç–µ–∫—Å—Ç–∞:",
            height=100,
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ –æ –≤—ã—Ä—É—á–∫–µ, —Ä–∞—Å—Ö–æ–¥–∞—Ö, –ø—Ä–∏–±—ã–ª–∏..."
        )
        
        domain = st.selectbox("–ü—Ä–µ–¥–º–µ—Ç–Ω–∞—è –æ–±–ª–∞—Å—Ç—å:", ["–§–∏–Ω–∞–Ω—Å—ã", "–ü—Ä–æ–¥–∞–∂–∏", "HR", "–ò–¢", "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", "–û–ø–µ—Ä–∞—Ü–∏–∏"])
        
        terminology_type = st.multiselect(
            "–¢–∏–ø—ã —Ç–µ—Ä–º–∏–Ω–æ–≤ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞:",
            ["–ö–ª—é—á–µ–≤—ã–µ –ø–æ–Ω—è—Ç–∏—è", "–°–∏–Ω–æ–Ω–∏–º—ã", "–°–æ–∫—Ä–∞—â–µ–Ω–∏—è", "–ü–µ—Ä–µ–≤–æ–¥—ã", "–°–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã"]
        )
        
        if st.button("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Ä–º–∏–Ω—ã"):
            if context_input:
                with st.spinner("–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç..."):
                    import time
                    time.sleep(2)
                
                st.success("‚úÖ –¢–µ—Ä–º–∏–Ω—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
                
                # –ò–º–∏—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ò–ò
                terms_data = {
                    '–¢–µ—Ä–º–∏–Ω': ['ROI', 'EBITDA', 'Cash Flow', '–í—ã—Ä—É—á–∫–∞', '–ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å'],
                    '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ': [
                        '–í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏',
                        '–ü—Ä–∏–±—ã–ª—å –¥–æ –Ω–∞–ª–æ–≥–æ–≤ –∏ –∞–º–æ—Ä—Ç–∏–∑–∞—Ü–∏–∏', 
                        '–î–µ–Ω–µ–∂–Ω—ã–π –ø–æ—Ç–æ–∫',
                        '–û–±—â–∏–π –¥–æ—Ö–æ–¥ –æ—Ç –ø—Ä–æ–¥–∞–∂',
                        '–î–æ–ª—è –ø—Ä–∏–±—ã–ª–∏ –≤ –≤—ã—Ä—É—á–∫–µ'
                    ],
                    '–°–∏–Ω–æ–Ω–∏–º—ã': [
                        'Return on Investment',
                        '–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –ø—Ä–∏–±—ã–ª—å',
                        '–ü–æ—Ç–æ–∫ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤', 
                        '–î–æ—Ö–æ–¥—ã, Sales',
                        '–†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å, Margin'
                    ],
                    '–ö–∞—Ç–µ–≥–æ—Ä–∏—è': ['–§–∏–Ω–∞–Ω—Å—ã', '–§–∏–Ω–∞–Ω—Å—ã', '–§–∏–Ω–∞–Ω—Å—ã', '–§–∏–Ω–∞–Ω—Å—ã', '–§–∏–Ω–∞–Ω—Å—ã']
                }
                
                df_terms = pd.DataFrame(terms_data)
                st.dataframe(df_terms, use_container_width=True)
                
                col1, col2 = st.columns(2)
                with col1:
                    st.download_button(
                        label="–≠–∫—Å–ø–æ—Ä—Ç –≤ Excel",
                        data="–¢–µ—Ä–º–∏–Ω—ã (–∑–∞–≥–ª—É—à–∫–∞)",
                        file_name="generated_terms.xlsx",
                        mime="application/vnd.ms-excel"
                    )
                
                with col2:
                    if st.button("–î–æ–±–∞–≤–∏—Ç—å –≤ –≥–ª–æ—Å—Å–∞—Ä–∏–π"):
                        st.success("‚úÖ –¢–µ—Ä–º–∏–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –≥–ª–æ—Å—Å–∞—Ä–∏–π")
            else:
                st.error("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")

elif selected_page == "üìà –î–∞—à–±–æ—Ä–¥ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏":
    st.title("üìà –î–∞—à–±–æ—Ä–¥ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç—á–µ—Ç–æ–≤")
    
    # –§–∏–ª—å—Ç—Ä—ã
    col1, col2, col3 = st.columns(3)
    
    with col1:
        departments = ['–í—Å–µ'] + list(set([r['department'] for r in st.session_state.reports_data]))
        selected_dept = st.selectbox("–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç:", departments)
    
    with col2:
        status_filter = st.selectbox("–°—Ç–∞—Ç—É—Å:", ['–í—Å–µ', '–ê–∫—Ç—É–∞–ª—å–Ω—ã–π', '–¢—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', '–ù–æ–≤—ã–π'])
    
    with col3:
        date_range = st.selectbox("–ü–µ—Ä–∏–æ–¥:", ['–í—Å–µ –≤—Ä–µ–º—è', '–ü–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü', '–ü–æ—Å–ª–µ–¥–Ω—è—è –Ω–µ–¥–µ–ª—è'])
    
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    filtered_data = st.session_state.reports_data
    if selected_dept != '–í—Å–µ':
        filtered_data = [r for r in filtered_data if r['department'] == selected_dept]
    if status_filter != '–í—Å–µ':
        filtered_data = [r for r in filtered_data if r['status'] == status_filter]
    
    # –ú–µ—Ç—Ä–∏–∫–∏
    col1, col2, col3, col4 = st.columns(4)
    
    total_reports = len(filtered_data)
    actual_reports = len([r for r in filtered_data if r['status'] == '–ê–∫—Ç—É–∞–ª—å–Ω—ã–π'])
    actual_percentage = (actual_reports / total_reports * 100) if total_reports > 0 else 0
    
    with col1:
        st.metric("–í—Å–µ–≥–æ –æ—Ç—á–µ—Ç–æ–≤", total_reports)
    
    with col2:
        st.metric("–ê–∫—Ç—É–∞–ª—å–Ω—ã—Ö", actual_reports)
    
    with col3:
        st.metric("% –ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏", f"{actual_percentage:.1f}%")
    
    with col4:
        overdue = len([r for r in filtered_data if r['next_update'] < datetime.now()])
        st.metric("–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ", overdue, delta=f"-{overdue}")
    
    # –ì—Ä–∞—Ñ–∏–∫–∏
    col1, col2 = st.columns(2)
    
    with col1:
        st.subheader("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º")
        status_counts = {}
        for report in filtered_data:
            status = report['status']
            status_counts[status] = status_counts.get(status, 0) + 1
        
        if status_counts:
            fig_pie = px.pie(
                values=list(status_counts.values()),
                names=list(status_counts.keys()),
                color_discrete_map={
                    '–ê–∫—Ç—É–∞–ª—å–Ω—ã–π': '#28a745',
                    '–¢—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è': '#ffc107', 
                    '–ù–æ–≤—ã–π': '#17a2b8'
                }
            )
            st.plotly_chart(fig_pie, use_container_width=True)
    
    with col2:
        st.subheader("–ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç–∏")
        completion_data = [(r['name'], r['completion']) for r in filtered_data]
        if completion_data:
            names, completions = zip(*completion_data)
            
            fig_bar = px.bar(
                x=list(names),
                y=list(completions),
                color=list(completions),
                color_continuous_scale='RdYlGn',
                title="–ó–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç—å –æ—Ç—á–µ—Ç–æ–≤ (%)"
            )
            fig_bar.update_layout(xaxis_tickangle=-45)
            st.plotly_chart(fig_bar, use_container_width=True)
    
    # –î–µ—Ç–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞
    st.subheader("–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –æ—Ç—á–µ—Ç–∞–º")
    
    if filtered_data:
        df_display = pd.DataFrame([
            {
                '–ù–∞–∑–≤–∞–Ω–∏–µ': r['name'],
                '–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç': r['department'], 
                '–í–ª–∞–¥–µ–ª–µ—Ü': r['owner'],
                '–°—Ç–∞—Ç—É—Å': r['status'],
                '–ó–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç—å': f"{r['completion']}%",
                '–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ': r['last_update'].strftime('%d.%m.%Y'),
                '–°–ª–µ–¥—É—é—â–∞—è –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è': r['next_update'].strftime('%d.%m.%Y'),
                '–î–Ω–µ–π –¥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è': (r['next_update'] - datetime.now()).days
            }
            for r in filtered_data
        ])
        
        # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã
        def highlight_status(row):
            if row['–î–Ω–µ–π –¥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'] < 0:
                return ['background-color: #ffebee'] * len(row)
            elif row['–î–Ω–µ–π –¥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'] < 7:
                return ['background-color: #fff3e0'] * len(row)
            else:
                return [''] * len(row)
        
        styled_df = df_display.style.apply(highlight_status, axis=1)
        st.dataframe(styled_df, use_container_width=True)
        
        # –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º
        st.subheader("–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
        
        for report in filtered_data:
            if report['next_update'] < datetime.now() or report['completion'] < 100:
                with st.expander(f"‚ö†Ô∏è {report['name']} - —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è"):
                    issues = []
                    if report['next_update'] < datetime.now():
                        days_overdue = (datetime.now() - report['next_update']).days
                        issues.append(f"–ü—Ä–æ—Å—Ä–æ—á–µ–Ω –Ω–∞ {days_overdue} –¥–Ω–µ–π")
                    
                    if report['completion'] < 100:
                        issues.append(f"–ó–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç—å: {report['completion']}%")
                    
                    if report['status'] == '–¢—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è':
                        issues.append("–¢—Ä–µ–±—É–µ—Ç –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö")
                    
                    st.write("**–í—ã—è–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:**")
                    for issue in issues:
                        st.write(f"‚Ä¢ {issue}")
                    
                    st.write(f"**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** –°–≤—è–∑–∞—Ç—å—Å—è —Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º ({report['owner']}) –¥–ª—è –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞")
                    st.write(f"**–î–∞—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–π –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏:** {report['next_update'].strftime('%d.%m.%Y')}")

elif selected_page == "ü§ñ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
    st.title("ü§ñ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –æ—Ç—á–µ—Ç–∞–º")
    
    # –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞
    if 'chat_history' not in st.session_state:
        st.session_state.chat_history = [
            {"role": "assistant", "content": "–ü—Ä–∏–≤–µ—Ç! –Ø –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞–º–∏. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"}
        ]
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
    for message in st.session_state.chat_history:
        if message["role"] == "user":
            st.chat_message("user").write(message["content"])
        else:
            st.chat_message("assistant").write(message["content"])
    
    # –ü–æ–ª–µ –≤–≤–æ–¥–∞
    user_input = st.chat_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å...")
    
    if user_input:
        # –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        st.session_state.chat_history.append({"role": "user", "content": user_input})
        st.chat_message("user").write(user_input)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç (–∏–º–∏—Ç–∞—Ü–∏—è –ò–ò)
        response = generate_ai_response(user_input)
        st.session_state.chat_history.append({"role": "assistant", "content": response})
        st.chat_message("assistant").write(response)
        
        st.rerun()
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å —á–∞—Å—Ç—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏
    with st.sidebar:
        st.subheader("üí° –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
        
        frequent_questions = [
            "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –æ—Ç—á–µ—Ç?",
            "–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é?",
            "–ö—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ—Ç—á–µ—Ç–∞?",
            "–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –æ—Ç—á–µ—Ç–∞?",
            "–ì–¥–µ –Ω–∞–π—Ç–∏ —à–∞–±–ª–æ–Ω—ã –æ—Ç—á–µ—Ç–æ–≤?"
        ]
        
        for question in frequent_questions:
            if st.button(question, key=f"faq_{question}"):
                st.session_state.chat_history.append({"role": "user", "content": question})
                response = generate_ai_response(question)
                st.session_state.chat_history.append({"role": "assistant", "content": response})
                st.rerun()

def generate_ai_response(question):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"""
    question_lower = question.lower()
    
    if "—Å–æ–∑–¥–∞—Ç—å" in question_lower and "–æ—Ç—á–µ—Ç" in question_lower:
        return """–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞:
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–î–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–∞–º–∏"
2. –í—ã–±–µ—Ä–∏—Ç–µ "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π"
3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –Ω–∞–∑–≤–∞–Ω–∏–µ, –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç, –≤–ª–∞–¥–µ–ª–µ—Ü
4. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—Ç—á–µ—Ç–∞ –∏ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
5. –ù–∞–∂–º–∏—Ç–µ "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç"

–ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–∫–∞—á–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π —à–∞–±–ª–æ–Ω –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ç—á–µ—Ç–∞–º"!"""
    
    elif "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü" in question_lower:
        return """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞:
1. –û—Ç–∫—Ä–æ–π—Ç–µ "–î–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–∞–º–∏" ‚Üí "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å"
2. –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç—á–µ—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
3. –£–∫–∞–∂–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö (–ë–î, API, Excel —Ñ–∞–π–ª)
4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —á–∞—Å—Ç–æ—Ç—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
5. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–æ–±–∞–≤—å—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö

–°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å –æ—Ç—á–µ—Ç —Å–æ–≥–ª–∞—Å–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é."""
    
    elif "–≤–ª–∞–¥–µ–ª–µ—Ü" in question_lower:
        return """–í–ª–∞–¥–µ–ª—å—Ü–µ–º –æ—Ç—á–µ—Ç–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å:
- –õ—é–±–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º –¥–∞–Ω–Ω—ã–º
- –°–æ—Ç—Ä—É–¥–Ω–∏–∫, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
- –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è (–¥–ª—è –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—Å–∫–∏—Ö –æ—Ç—á–µ—Ç–æ–≤)

–î–ª—è —Å–º–µ–Ω—ã –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–î–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–∞–º–∏" ‚Üí "–°–º–µ–Ω–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞"."""
    
    elif "—Å—Ç–∞—Ç—É—Å" in question_lower:
        return """–°—Ç–∞—Ç—É—Å—ã –æ—Ç—á–µ—Ç–æ–≤:
- **–ù–æ–≤—ã–π**: —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç
- **–ê–∫—Ç—É–∞–ª—å–Ω—ã–π**: –æ—Ç—á–µ—Ç —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
- **–¢—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è**: –æ—Ç—á–µ—Ç –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏

–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–∞."""
    
    elif "—à–∞–±–ª–æ–Ω" in question_lower:
        return """–®–∞–±–ª–æ–Ω—ã –æ—Ç—á–µ—Ç–æ–≤ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ç—á–µ—Ç–∞–º" ‚Üí –≤–∫–ª–∞–¥–∫–∞ "–®–∞–±–ª–æ–Ω—ã".
–î–æ—Å—Ç—É–ø–Ω—ã —à–∞–±–ª–æ–Ω—ã –¥–ª—è:
- –§–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
- –û—Ç—á–µ—Ç–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º  
- HR –æ—Ç—á–µ—Ç–æ–≤
- –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤

–ö–∞–∂–¥—ã–π —à–∞–±–ª–æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç –≥–æ—Ç–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é."""
    
    else:
        return f"""–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–ø—Ä–æ—Å! –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å —Å "{question}".

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é:
- –ò–∑—É—á–∏—Ç—å —Ä–∞–∑–¥–µ–ª "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ç—á–µ—Ç–∞–º"
- –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —á–∞—Å—Ç—ã–º –≤–æ–ø—Ä–æ—Å–∞–º
- –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Å–∏—Å—Ç–µ–º—ã

–ï—Å—Ç—å –ª–∏ –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å –æ—Ç—á–µ—Ç–∞–º–∏?"""

elif selected_page == "üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å":
    st.title("üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
    
    st.markdown("""
    ### –í–∞—à–µ –º–Ω–µ–Ω–∏–µ –≤–∞–∂–Ω–æ –¥–ª—è –Ω–∞—Å!
    –ü–æ–º–æ–≥–∏—Ç–µ —É–ª—É—á—à–∏—Ç—å —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞–º–∏ - –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –∏–ª–∏ —Å–æ–æ–±—â–∏—Ç–µ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö.
    """)
    
    # –§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    with st.form("feedback_form"):
        col1, col2 = st.columns(2)
        
        with col1:
            feedback_type = st.selectbox(
                "–¢–∏–ø –æ–±—Ä–∞—â–µ–Ω–∏—è:",
                ["–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é", "–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ", "–í–æ–ø—Ä–æ—Å", "–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å", "–î—Ä—É–≥–æ–µ"]
            )
            
            priority = st.selectbox(
                "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:",
                ["–ù–∏–∑–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–í—ã—Å–æ–∫–∏–π", "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π"]
            )
        
        with col2:
            name = st.text_input("–í–∞—à–µ –∏–º—è:")
            email = st.text_input("Email –¥–ª—è —Å–≤—è–∑–∏:")
        
        subject = st.text_input("–¢–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏—è:")
        message = st.text_area("–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:", height=150)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
        st.markdown("#### –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏")
        col1, col2 = st.columns(2)
        
        with col1:
            attach_screenshot = st.checkbox("–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç")
            anonymous = st.checkbox("–ê–Ω–æ–Ω–∏–º–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ")
        
        with col2:
            subscribe_updates = st.checkbox("–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö")
            
        # –§–∞–π–ª—ã
        uploaded_files = st.file_uploader(
            "–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):",
            accept_multiple_files=True,
            type=['png', 'jpg', 'jpeg', 'pdf', 'doc', 'docx']
        )
        
        submit_feedback = st.form_submit_button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å")
        
        if submit_feedback:
            if subject and message:
                feedback_item = {
                    'id': len(st.session_state.feedback_data) + 1,
                    'type': feedback_type,
                    'priority': priority,
                    'name': name if not anonymous else "–ê–Ω–æ–Ω–∏–º–Ω–æ",
                    'email': email,
                    'subject': subject,
                    'message': message,
                    'date': datetime.now(),
                    'status': '–ù–æ–≤–æ–µ'
                }
                
                st.session_state.feedback_data.append(feedback_item)
                st.success("‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ –∏ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ.")
                
                # –ü–æ–∫–∞–∑–∞—Ç—å –Ω–æ–º–µ—Ä –æ–±—Ä–∞—â–µ–Ω–∏—è
                st.info(f"üìã –ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è: FB-{feedback_item['id']:04d}")
                
            else:
                st.error("‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: —Ç–µ–º–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    if st.session_state.feedback_data:
        st.markdown("---")
        st.subheader("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏")
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            total_feedback = len(st.session_state.feedback_data)
            st.metric("–í—Å–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏–π", total_feedback)
        
        with col2:
            recent_feedback = len([f for f in st.session_state.feedback_data 
                                 if (datetime.now() - f['date']).days <= 7])
            st.metric("–ó–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é", recent_feedback)
        
        with col3:
            avg_response_time = "2.5 –¥–Ω—è"  # –ó–∞–≥–ª—É—à–∫–∞
            st.metric("–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞", avg_response_time)

# –ê–¥–º–∏–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã
elif selected_page == "üîç –ö–æ–Ω—Ç—Ä–æ–ª—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏":
    st.title("üîç –ö–æ–Ω—Ç—Ä–æ–ª—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤")
    
    # –§–∏–ª—å—Ç—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω–∞
    col1, col2, col3 = st.columns(3)
    
    with col1:
        status_filter = st.selectbox("–°—Ç–∞—Ç—É—Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:", 
                                   ["–í—Å–µ", "–û–∂–∏–¥–∞–µ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏", "–û–¥–æ–±—Ä–µ–Ω–æ", "–û—Ç–∫–ª–æ–Ω–µ–Ω–æ", "–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ"])
    
    with col2:
        dept_filter = st.selectbox("–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç:", 
                                 ["–í—Å–µ"] + list(set([r['department'] for r in st.session_state.reports_data])))
    
    with col3:
        date_filter = st.date_input("–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç:")
    
    # –¢–∞–±–ª–∏—Ü–∞ –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏
    st.subheader("–û—Ç—á–µ—Ç—ã, –æ–∂–∏–¥–∞—é—â–∏–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏")
    
    moderation_data = []
    for report in st.session_state.reports_data:
        moderation_data.append({
            'ID': report['id'],
            '–ù–∞–∑–≤–∞–Ω–∏–µ': report['name'],
            '–ê–≤—Ç–æ—Ä': report['owner'],
            '–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç': report['department'],
            '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è': report['last_update'].strftime('%d.%m.%Y'),
            '–°—Ç–∞—Ç—É—Å': '–û–∂–∏–¥–∞–µ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏',
            '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç': random.choice(['–ù–∏–∑–∫–∏–π', '–°—Ä–µ–¥–Ω–∏–π', '–í—ã—Å–æ–∫–∏–π'])
        })
    
    df_moderation = pd.DataFrame(moderation_data)
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    for idx, row in df_moderation.iterrows():
        with st.expander(f"üìã {row['–ù–∞–∑–≤–∞–Ω–∏–µ']} - {row['–ê–≤—Ç–æ—Ä']}"):
            col1, col2 = st.columns([3, 1])
            
            with col1:
                st.write(f"**–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç:** {row['–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç']}")
                st.write(f"**–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:** {row['–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è']}")
                st.write(f"**–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:** {row['–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç']}")
                
                # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
                moderator_comment = st.text_area(f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:", 
                                               key=f"comment_{row['ID']}")
            
            with col2:
                st.write("**–î–µ–π—Å—Ç–≤–∏—è:**")
                
                if st.button("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", key=f"approve_{row['ID']}"):
                    st.success("–û—Ç—á–µ—Ç –æ–¥–æ–±—Ä–µ–Ω!")
                
                if st.button("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", key=f"reject_{row['ID']}"):
                    st.error("–û—Ç—á–µ—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω!")
                
                if st.button("üìù –ó–∞–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–∞–≤–∫–∏", key=f"revise_{row['ID']}"):
                    st.warning("–ó–∞–ø—Ä–æ—à–µ–Ω—ã –ø—Ä–∞–≤–∫–∏!")

elif selected_page == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏":
    st.title("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤")
    
    # –ú–µ—Ç—Ä–∏–∫–∏
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.metric("–í—Å–µ–≥–æ –æ—Ç—á–µ—Ç–æ–≤", len(st.session_state.reports_data))
    
    with col2:
        published = len([r for r in st.session_state.reports_data if r['status'] == '–ê–∫—Ç—É–∞–ª—å–Ω—ã–π'])
        st.metric("–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ", published)
    
    with col3:
        pending = len([r for r in st.session_state.reports_data if r['status'] == '–ù–æ–≤—ã–π'])
        st.metric("–ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏", pending)
    
    with col4:
        avg_time = "3.2 –¥–Ω—è"  # –ó–∞–≥–ª—É—à–∫–∞
        st.metric("–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏", avg_time)
    
    # –ì—Ä–∞—Ñ–∏–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    col1, col2 = st.columns(2)
    
    with col1:
        st.subheader("–ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞–º")
        dept_counts = {}
        for report in st.session_state.reports_data:
            dept = report['department']
            dept_counts[dept] = dept_counts.get(dept, 0) + 1
        
        fig_dept = px.bar(
            x=list(dept_counts.keys()),
            y=list(dept_counts.values()),
            title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—á–µ—Ç–æ–≤ –ø–æ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞–º"
        )
        st.plotly_chart(fig_dept, use_container_width=True)
    
    with col2:
        st.subheader("–î–∏–Ω–∞–º–∏–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π")
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
        dates = pd.date_range(start='2024-01-01', end='2024-12-31', freq='M')
        publications = [random.randint(5, 25) for _ in dates]
        
        fig_timeline = px.line(
            x=dates,
            y=publications,
            title="–ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ –º–µ—Å—è—Ü–∞–º"
        )
        st.plotly_chart(fig_timeline, use_container_width=True)
    
    # –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
    st.subheader("–î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")
    
    tab1, tab2, tab3 = st.tabs(["üìà –¢—Ä–µ–Ω–¥—ã", "‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏", "üë• –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"])
    
    with tab1:
        st.markdown("#### –¢—Ä–µ–Ω–¥—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
        
        # –¢—Ä–µ–Ω–¥ –ø–æ —Ç–∏–ø–∞–º –æ—Ç—á–µ—Ç–æ–≤
        trend_data = {
            '–ú–µ—Å—è—Ü': ['–Ø–Ω–≤', '–§–µ–≤', '–ú–∞—Ä', '–ê–ø—Ä', '–ú–∞–π', '–ò—é–Ω'],
            '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ': [12, 15, 10, 18, 20, 16],
            '–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ': [8, 12, 15, 10, 14, 18],
            '–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ': [5, 8, 12, 15, 10, 12]
        }
        
        df_trend = pd.DataFrame(trend_data)
        
        fig_trend = px.line(
            df_trend,
            x='–ú–µ—Å—è—Ü',
            y=['–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ', '–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ', '–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ'],
            title="–¢—Ä–µ–Ω–¥—ã –ø–æ —Ç–∏–ø–∞–º –æ—Ç—á–µ—Ç–æ–≤"
        )
        st.plotly_chart(fig_trend, use_container_width=True)
    
    with tab2:
        st.markdown("#### –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç—á–µ—Ç–æ–≤")
        
        processing_data = {
            '–≠—Ç–∞–ø': ['–°–æ–∑–¥–∞–Ω–∏–µ', '–ú–æ–¥–µ—Ä–∞—Ü–∏—è', '–ü—Ä–∞–≤–∫–∏', '–ü—É–±–ª–∏–∫–∞—Ü–∏—è'],
            '–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è (–¥–Ω–∏)': [1.2, 2.5, 1.8, 0.5],
            '–ú–µ–¥–∏–∞–Ω–∞ (–¥–Ω–∏)': [1.0, 2.0, 1.5, 0.3]
        }
        
        df_processing = pd.DataFrame(processing_data)
        
        fig_processing = px.bar(
            df_processing,
            x='–≠—Ç–∞–ø',
            y=['–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è (–¥–Ω–∏)', '–ú–µ–¥–∏–∞–Ω–∞ (–¥–Ω–∏)'],
            title="–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ —ç—Ç–∞–ø–∞–º",
            barmode='group'
        )
        st.plotly_chart(fig_processing, use_container_width=True)
    
    with tab3:
        st.markdown("#### –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        # –¢–æ–ø –∞–≤—Ç–æ—Ä–æ–≤ –æ—Ç—á–µ—Ç–æ–≤
        author_counts = {}
        for report in st.session_state.reports_data:
            author = report['owner']
            author_counts[author] = author_counts.get(author, 0) + 1
        
        top_authors = sorted(author_counts.items(), key=lambda x: x[1], reverse=True)
        
        st.markdown("**–¢–æ–ø –∞–≤—Ç–æ—Ä–æ–≤ –æ—Ç—á–µ—Ç–æ–≤:**")
        for i, (author, count) in enumerate(top_authors[:5], 1):
            st.write(f"{i}. {author} - {count} –æ—Ç—á–µ—Ç–æ–≤")

elif selected_page == "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã":
    st.title("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
    
    st.markdown("""
    ### –û—Ç—á–µ—Ç—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –æ—Å–æ–±–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è
    –ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –æ—Ç—á–µ—Ç—ã —Å –≤—ã—è–≤–ª–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
    """)
    
    # –°–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
    problematic_reports = []
    for report in st.session_state.reports_data:
        issues = []
        if report['next_update'] < datetime.now():
            issues.append("–ü—Ä–æ—Å—Ä–æ—á–µ–Ω")
        if report['completion'] < 80:
            issues.append("–ù–∏–∑–∫–∞—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç—å")
        if report['status'] == '–¢—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è':
            issues.append("–¢—Ä–µ–±—É–µ—Ç –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏")
        
        if issues:
            problematic_reports.append({
                'report': report,
                'issues': issues
            })
    
    if not problematic_reports:
        st.success("üéâ –û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    else:
        for item in problematic_reports:
            report = item['report']
            issues = item['issues']
            
            with st.expander(f"‚ö†Ô∏è {report['name']} - {len(issues)} –ø—Ä–æ–±–ª–µ–º(—ã)"):
                col1, col2 = st.columns([2, 1])
                
                with col1:
                    st.write(f"**–í–ª–∞–¥–µ–ª–µ—Ü:** {report['owner']}")
                    st.write(f"**–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç:** {report['department']}")
                    st.write(f"**–°—Ç–∞—Ç—É—Å:** {report['status']}")
                    st.write(f"**–ó–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç—å:** {report['completion']}%")
                    
                    st.write("**–í—ã—è–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:**")
                    for issue in issues:
                        st.write(f"‚Ä¢ {issue}")
                
                with col2:
                    st.write("**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**")
                    days_overdue = (datetime.now() - report['next_update']).days
                    if days_overdue > 0:
                        st.error(f"–ü—Ä–æ—Å—Ä–æ—á–µ–Ω –Ω–∞ {days_overdue} –¥–Ω–µ–π")
                    
                    st.write(f"**–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:**")
                    st.write(report['last_update'].strftime('%d.%m.%Y'))
                
                # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                st.markdown("#### –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
                
                admin_comment = st.text_area(
                    "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:",
                    key=f"admin_comment_{report['id']}",
                    placeholder="–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ –ø—Ä–æ–±–ª–µ–º–µ –∏ –ø–ª–∞–Ω–∞—Ö —Ä–µ—à–µ–Ω–∏—è..."
                )
                
                col1, col2, col3 = st.columns(3)
                
                with col1:
                    if st.button("üìß –£–≤–µ–¥–æ–º–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞", key=f"notify_{report['id']}"):
                        st.success("–í–ª–∞–¥–µ–ª–µ—Ü —É–≤–µ–¥–æ–º–ª–µ–Ω!")
                
                with col2:
                    if st.button("üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ", key=f"force_update_{report['id']}"):
                        st.warning("–ó–∞–ø—É—â–µ–Ω–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ")
                
                with col3:
                    if st.button("üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç", key=f"block_{report['id']}"):
                        st.error("–û—Ç—á–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
                
                # –ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π
                with st.expander("üìù –ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π"):
                    st.write("- 15.05.2024: –°–æ–∑–¥–∞–Ω –æ—Ç—á–µ—Ç")
                    st.write("- 20.05.2024: –ü–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ") 
                    st.write("- 01.06.2024: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏")
                    st.write("- 10.06.2024: –û—Ç—á–µ—Ç –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –ø—Ä–æ–±–ª–µ–º–Ω—ã–π")

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
def generate_ai_response(question):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"""
    question_lower = question.lower()
    
    if "—Å–æ–∑–¥–∞—Ç—å" in question_lower and "–æ—Ç—á–µ—Ç" in question_lower:
        return """–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞:
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–î–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–∞–º–∏"
2. –í—ã–±–µ—Ä–∏—Ç–µ "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π"
3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –Ω–∞–∑–≤–∞–Ω–∏–µ, –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç, –≤–ª–∞–¥–µ–ª–µ—Ü
4. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—Ç—á–µ—Ç–∞ –∏ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
5. –ù–∞–∂–º–∏—Ç–µ "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç"

–ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–∫–∞—á–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π —à–∞–±–ª–æ–Ω –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ç—á–µ—Ç–∞–º"!"""
    
    elif "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü" in question_lower:
        return """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞:
1. –û—Ç–∫—Ä–æ–π—Ç–µ "–î–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–∞–º–∏" ‚Üí "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å"
2. –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç—á–µ—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
3. –£–∫–∞–∂–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö (–ë–î, API, Excel —Ñ–∞–π–ª)
4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —á–∞—Å—Ç–æ—Ç—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
5. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–æ–±–∞–≤—å—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö

–°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å –æ—Ç—á–µ—Ç —Å–æ–≥–ª–∞—Å–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é."""
    
    elif "–≤–ª–∞–¥–µ–ª–µ—Ü" in question_lower:
        return """–í–ª–∞–¥–µ–ª—å—Ü–µ–º –æ—Ç—á–µ—Ç–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å:
- –õ—é–±–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º –¥–∞–Ω–Ω—ã–º
- –°–æ—Ç—Ä—É–¥–Ω–∏–∫, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
- –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è (–¥–ª—è –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—Å–∫–∏—Ö –æ—Ç—á–µ—Ç–æ–≤)

–î–ª—è —Å–º–µ–Ω—ã –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–î–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–∞–º–∏" ‚Üí "–°–º–µ–Ω–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞"."""
    
    elif "—Å—Ç–∞—Ç—É—Å" in question_lower:
        return """–°—Ç–∞—Ç—É—Å—ã –æ—Ç—á–µ—Ç–æ–≤:
- **–ù–æ–≤—ã–π**: —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç
- **–ê–∫—Ç—É–∞–ª—å–Ω—ã–π**: –æ—Ç—á–µ—Ç —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
- **–¢—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è**: –æ—Ç—á–µ—Ç –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏

–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–∞."""
    
    elif "—à–∞–±–ª–æ–Ω" in question_lower:
        return """–®–∞–±–ª–æ–Ω—ã –æ—Ç—á–µ—Ç–æ–≤ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ç—á–µ—Ç–∞–º" ‚Üí –≤–∫–ª–∞–¥–∫–∞ "–®–∞–±–ª–æ–Ω—ã".
–î–æ—Å—Ç—É–ø–Ω—ã —à–∞–±–ª–æ–Ω—ã –¥–ª—è:
- –§–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
- –û—Ç—á–µ—Ç–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º  
- HR –æ—Ç—á–µ—Ç–æ–≤
- –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤

–ö–∞–∂–¥—ã–π —à–∞–±–ª–æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç –≥–æ—Ç–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é."""
    
    else:
        return f"""–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–ø—Ä–æ—Å! –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å —Å "{question}".

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é:
- –ò–∑—É—á–∏—Ç—å —Ä–∞–∑–¥–µ–ª "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ç—á–µ—Ç–∞–º"
- –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —á–∞—Å—Ç—ã–º –≤–æ–ø—Ä–æ—Å–∞–º
- –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Å–∏—Å—Ç–µ–º—ã

–ï—Å—Ç—å –ª–∏ –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å –æ—Ç—á–µ—Ç–∞–º–∏?"""

# –§—É—Ç–µ—Ä
st.markdown("---")
st.markdown("""
<div style='text-align: center; color: #666; font-size: 0.8em;'>
    ¬© 2024 –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞–º–∏ | –í–µ—Ä—Å–∏—è 1.0 | 
    <a href='#'>–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞</a> | 
    <a href='#'>–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</a>
</div>
""", unsafe_allow_html=True)