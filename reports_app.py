import streamlit as st
import pandas as pd
import numpy as np
from datetime import datetime
import io
from pathlib import Path
import warnings
from openpyxl import Workbook
from openpyxl.styles import Font
warnings.filterwarnings('ignore')

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞–º–∏",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
if 'admin_mode' not in st.session_state:
    st.session_state.admin_mode = False

# CSS —Å—Ç–∏–ª–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞
st.markdown("""
<style>
    .main-header {
        font-size: 2.5rem;
        font-weight: bold;
        color: #1f77b4;
        text-align: center;
        margin-bottom: 2rem;
    }
    .page-header {
        font-size: 2rem;
        font-weight: bold;
        color: #333;
        border-bottom: 2px solid #1f77b4;
        padding-bottom: 0.5rem;
        margin-bottom: 1.5rem;
    }
    .sidebar-header {
        font-size: 1.2rem;
        font-weight: bold;
        color: #1f77b4;
        margin-bottom: 1rem;
    }
    .admin-badge {
        background-color: #ff4b4b;
        color: white;
        padding: 0.2rem 0.5rem;
        border-radius: 0.3rem;
        font-size: 0.8rem;
        font-weight: bold;
    }
    .coming-soon {
        text-align: center;
        color: #666;
        font-style: italic;
        font-size: 1.2rem;
        margin-top: 3rem;
        padding: 2rem;
        border: 2px dashed #ccc;
        border-radius: 0.5rem;
    }

    # –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ —Å—Ç–∏–ª–∏ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º CSS —Å—Ç–∏–ª—è–º
    
    .section-container {
        background-color: #f8f9fa;
        padding: 1.5rem;
        border-radius: 0.5rem;
        border-left: 4px solid #1f77b4;
        margin-bottom: 1rem;
    }
    
    .edit-mode-badge {
        background-color: #ff8c00;
        color: white;
        padding: 0.2rem 0.5rem;
        border-radius: 0.3rem;
        font-size: 0.7rem;
        font-weight: bold;
        margin-bottom: 0.5rem;
        display: inline-block;
    }
    
    .section-text {
        margin: 0;
        line-height: 1.6;
        font-size: 1rem;
    }
</style>
""", unsafe_allow_html=True)

# –ö–ª–∞—Å—Å ExcelTransformer –∏–∑ transform_test.py
class ExcelTransformer:
    def __init__(self, report_number=None):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä–∞
        
        Args:
            report_number (str): –ù–æ–º–µ—Ä –æ—Ç—á–µ—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–æ–≤ –∞—Ç—Ä–∏–±—É—Ç–æ–≤
        """
        self.report_number = report_number or "R001"
        self.supported_extensions = ['.xlsx', '.xls', '.csv']
        self.report_types = ["–†—É—á–Ω–æ–π", "–ü–æ–ª—É–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π", "–ò–õ–ê"]
    
    def detect_data_type(self, values):
        """
        –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–∞
        
        Args:
            values: pandas Series —Å –¥–∞–Ω–Ω—ã–º–∏ —Å—Ç–æ–ª–±—Ü–∞
            
        Returns:
            str: —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö ('—Ç–µ–∫—Å—Ç', '—á–∏—Å–ª–æ', '–¥–∞—Ç–∞', '—Ñ–ª–∞–≥')
        """
        # –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ NaN
        clean_values = values.dropna()
        if len(clean_values) == 0:
            return "—Ç–µ–∫—Å—Ç"
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        str_values = clean_values.astype(str).str.strip().str.lower()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±—É–ª–µ–≤—ã –∑–Ω–∞—á–µ–Ω–∏—è (—Ñ–ª–∞–≥–∏)
        bool_indicators = {
            '–¥–∞', '–Ω–µ—Ç', 'true', 'false', '1', '0', 'yes', 'no', 
            'y', 'n', '–≤–∫–ª', '–≤—ã–∫–ª', 'on', 'off', '–∞–∫—Ç–∏–≤–µ–Ω', '–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω'
        }
        unique_values = set(str_values.unique())
        if unique_values.issubset(bool_indicators) and len(unique_values) <= 3:
            return "—Ñ–ª–∞–≥"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–∞—Ç—ã
        date_count = 0
        for val in clean_values:
            if self._is_date(val):
                date_count += 1
        
        if date_count / len(clean_values) > 0.7:  # 70% –∑–Ω–∞—á–µ–Ω–∏–π - –¥–∞—Ç—ã
            return "–¥–∞—Ç–∞"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∏—Å–ª–∞
        numeric_count = 0
        for val in clean_values:
            if self._is_numeric(val):
                numeric_count += 1
        
        if numeric_count / len(clean_values) > 0.8:  # 80% –∑–Ω–∞—á–µ–Ω–∏–π - —á–∏—Å–ª–∞
            return "—á–∏—Å–ª–æ"
        
        return "—Ç–µ–∫—Å—Ç"
    
    def _is_date(self, value):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–∞—Ç–æ–π"""
        if pd.isna(value):
            return False
            
        # –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ –¥–∞—Ç—É
        date_formats = [
            '%d.%m.%Y', '%d/%m/%Y', '%Y-%m-%d', '%d-%m-%Y',
            '%d.%m.%y', '%d/%m/%y', '%y-%m-%d', '%d-%m-%y',
            '%Y.%m.%d', '%Y/%m/%d'
        ]
        
        str_val = str(value).strip()
        
        for fmt in date_formats:
            try:
                datetime.strptime(str_val, fmt)
                return True
            except ValueError:
                continue
                
        # –ü—Ä–æ–≤–µ—Ä–∏–º pandas to_datetime
        try:
            pd.to_datetime(str_val, errors='raise')
            return True
        except:
            return False
    
    def _is_numeric(self, value):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–ª–æ–º"""
        if pd.isna(value):
            return False
            
        try:
            # –ü–æ–ø—Ä–æ–±—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ float
            float(str(value).replace(',', '.').replace(' ', ''))
            return True
        except ValueError:
            return False
    
    def load_from_uploaded_file(self, uploaded_file):
        """
        –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ uploaded_file Streamlit
        
        Args:
            uploaded_file: —Ñ–∞–π–ª, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —á–µ—Ä–µ–∑ st.file_uploader
            
        Returns:
            pandas.DataFrame: –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        """
        try:
            file_extension = Path(uploaded_file.name).suffix.lower()
            
            if file_extension == '.csv':
                # –î–ª—è CSV –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ –∏ –∫–æ–¥–∏—Ä–æ–≤–∫–∏
                try:
                    df = pd.read_csv(uploaded_file, sep=',', encoding='utf-8')
                    if len(df.columns) > 1:
                        return df
                except:
                    pass
                
                try:
                    uploaded_file.seek(0)  # –°–±—Ä–æ—Å —É–∫–∞–∑–∞—Ç–µ–ª—è —Ñ–∞–π–ª–∞
                    df = pd.read_csv(uploaded_file, sep=';', encoding='cp1251')
                    if len(df.columns) > 1:
                        return df
                except:
                    pass
                
                # –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞
                uploaded_file.seek(0)
                df = pd.read_csv(uploaded_file)
                
            else:
                # –î–ª—è Excel —Ñ–∞–π–ª–æ–≤
                df = pd.read_excel(uploaded_file)
            
            return df
            
        except Exception as e:
            raise Exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: {str(e)}")
    
    def transform_to_metadata(self, df, report_type):
        """
        –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ DataFrame –≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤
        
        Args:
            df (pandas.DataFrame): –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            report_type (str): —Ç–∏–ø –æ—Ç—á–µ—Ç–∞ (–†—É—á–Ω–æ–π, –ü–æ–ª—É–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π, –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π, –ò–õ–ê)
            
        Returns:
            pandas.DataFrame: –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤
        """
        metadata_list = []
        
        for idx, column in enumerate(df.columns, 1):
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç–æ–ª–±—Ü–∞
            column_data = df[column]
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
            data_type = self.detect_data_type(column_data)
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞
            if report_type in ["–†—É—á–Ω–æ–π", "–ü–æ–ª—É–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π"]:
                tech_algorithm_to_be = "–†—É—á–Ω–æ–π –≤–≤–æ–¥"
                data_source_type = "–†—É—á–Ω–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ"
            else:  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–ª–∏ –ò–õ–ê
                tech_algorithm_to_be = ""
                data_source_type = "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö"
            
            # –°–≤—è–∑—å —Å –ò–° –¥–ª—è –ò–õ–ê
            system_connection = "–ò–õ–ê One" if report_type == "–ò–õ–ê" else ""
            
            metadata_record = {
                'ReportCode_info': '',  # –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ–∑–∂–µ
                'Noreportfield_info': idx,
                'name': column,
                'description': '',
                'TechAsIs': '',
                'BussAlgorythm': '',
                'TechAlgorythm': tech_algorithm_to_be,
                'algorithms_change_info': '–Ω–µ—Ç',
                'dbobjectlink': '',
                'base_type_info': data_source_type,
                'related_it_system_info': system_connection,
                'reportfields_codes': '',
                'reportfields_names': '',
                'reportfields_parent_term': '',
                'reportfields_domain': '',
                'required_attribute_info': '–¥–∞',
                'base_type_report_field': data_type,
                'base_calc_ref_ind_info': '–ë–∞–∑–æ–≤—ã–π',
                'codeTable_info': '',
                'example': '',
                'isToDelete_info': ''
            }
            
            metadata_list.append(metadata_record)
        
        metadata_df = pd.DataFrame(metadata_list)
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º –∫–æ–¥ –∞—Ç—Ä–∏–±—É—Ç–∞ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è DataFrame
        metadata_df['ReportCode_info'] = metadata_df['Noreportfield_info'].apply(
            lambda x: f"{self.report_number}_{x:03d}"
        )
        
        return metadata_df
    
    def create_excel_download(self, metadata_df):
        """
        –°–æ–∑–¥–∞–Ω–∏–µ Excel —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
        
        Args:
            metadata_df (pandas.DataFrame): –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            
        Returns:
            bytes: –¥–∞–Ω–Ω—ã–µ Excel —Ñ–∞–π–ª–∞
        """
        output = io.BytesIO()
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–Ω–∏–≥—É Excel
        wb = Workbook()
        ws = wb.active
        ws.title = "–ê—Ç—Ä–∏–±—É—Ç –æ—Ç—á–µ—Ç–∞"
        
        # –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ (—Å–∫—Ä—ã—Ç–∞—è —Å—Ç—Ä–æ–∫–∞)
        technical_headers = [
            'ReportCode_info', 'Noreportfield_info', 'name', 'description', 'TechAsIs', 
            'BussAlgorythm', 'TechAlgorythm', 'algorithms_change_info', 'dbobjectlink', 
            'base_type_info', 'related_it_system_info', 'reportfields_codes', 
            'reportfields_names', 'reportfields_parent_term', 'reportfields_domain', 
            'required_attribute_info', 'base_type_report_field', 'base_calc_ref_ind_info', 
            'codeTable_info', 'example', 'isToDelete_info'
        ]
        
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–≤–∏–¥–∏–º–∞—è —Å—Ç—Ä–æ–∫–∞)
        user_headers = [
            '–ö–æ–¥ –∞—Ç—Ä–∏–±—É—Ç–∞ –æ—Ç—á–µ—Ç–∞', 
            '‚Ññ –∞—Ç—Ä–∏–±—É—Ç–∞ –æ—Ç—á–µ—Ç–∞', 
            '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞', 
            '–ë–∏–∑–Ω–µ—Å-–∞–ª–≥–æ—Ä–∏—Ç–º AS IS',
            '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º AS IS', 
            '–ë–∏–∑–Ω–µ—Å-–∞–ª–≥–æ—Ä–∏—Ç–º TO BE',
            '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º TO BE', 
            '–ê–ª–≥–æ—Ä–∏—Ç–º –∏–∑–º–µ–Ω–µ–Ω', 
            '–§–∏–∑–∏—á–µ—Å–∫–∏–µ –∞—Ç—Ä–∏–±—É—Ç—ã', 
            '–¢–∏–ø –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö',
            '–°–≤—è–∑—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π', 
            '–ö–æ–¥ —Ç–µ—Ä–º–∏–Ω–∞/—Ç–µ—Ä–º–∏–Ω–æ–≤',
            '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–µ—Ä–º–∏–Ω–∞/—Ç–µ—Ä–º–∏–Ω–æ–≤', 
            '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Å—É—â–Ω–æ—Å—Ç–∏ —Ç–µ—Ä–º–∏–Ω–∞/—Ç–µ—Ä–º–∏–Ω–æ–≤', 
            '–î–æ–º–µ–Ω —Ç–µ—Ä–º–∏–Ω–∞/—Ç–µ—Ä–º–∏–Ω–æ–≤', 
            '–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è', 
            '–ë–∞–∑–æ–≤—ã–π —Ç–∏–ø –∞—Ç—Ä–∏–±—É—Ç–∞ (–¢–µ–∫—Å—Ç, –ß–∏—Å–ª–æ, –î–∞—Ç–∞, –§–ª–∞–≥)', 
            '–ü—Ä–∏–∑–Ω–∞–∫ –∞—Ç—Ä–∏–±—É—Ç–∞ (–ë–∞–∑–æ–≤—ã–π, –†–∞—Å—á–µ—Ç–Ω—ã–π, –°–ø—Ä–∞–≤–æ—á–Ω—ã–π)', 
            '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞', 
            '–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ', 
            '–ü–æ–º–µ—á–µ–Ω –∫ —É–¥–∞–ª–µ–Ω–∏—é (–¥–∞/–Ω–µ—Ç)'
        ]
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É (—Å–∫—Ä—ã—Ç—É—é)
        for col_idx, header in enumerate(technical_headers, 1):
            ws.cell(row=1, column=col_idx, value=header)
        
        # –°–∫—Ä—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É
        ws.row_dimensions[1].hidden = True
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤–æ –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–æ–∫—É (–≤–∏–¥–∏–º—É—é)
        for col_idx, header in enumerate(user_headers, 1):
            cell = ws.cell(row=2, column=col_idx, value=header)
            # –î–µ–ª–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –ø–æ–ª—É–∂–∏—Ä–Ω—ã–º–∏
            cell.font = Font(bold=True)
        
        # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º –ø–µ—Ä–≤—ã–µ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏
        ws.freeze_panes = ws.cell(row=3, column=1)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞—á–∏–Ω–∞—è —Å —Ç—Ä–µ—Ç—å–µ–π —Å—Ç—Ä–æ–∫–∏
        for row_idx, (_, row) in enumerate(metadata_df.iterrows(), 3):
            for col_idx, value in enumerate(row, 1):
                ws.cell(row=row_idx, column=col_idx, value=value)
        
        # –ê–≤—Ç–æ–ø–æ–¥–±–æ—Ä —à–∏—Ä–∏–Ω—ã —Å—Ç–æ–ª–±—Ü–æ–≤ (—É—á–∏—Ç—ã–≤–∞–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –≤–∫–ª—é—á–∞—è –∑–∞–≥–æ–ª–æ–≤–∫–∏)
        for col_idx, column_letter in enumerate([chr(65 + i) for i in range(len(technical_headers))], 0):
            max_length = 0
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é —Å—Ç—Ä–æ–∫—É
            if len(technical_headers) > col_idx:
                if len(str(technical_headers[col_idx])) > max_length:
                    max_length = len(str(technical_headers[col_idx]))
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é —Å—Ç—Ä–æ–∫—É
            if len(user_headers) > col_idx:
                if len(str(user_headers[col_idx])) > max_length:
                    max_length = len(str(user_headers[col_idx]))
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
            for row_idx in range(3, len(metadata_df) + 3):
                cell_value = ws.cell(row=row_idx, column=col_idx + 1).value
                if cell_value and len(str(cell_value)) > max_length:
                    max_length = len(str(cell_value))
            
            adjusted_width = min(max_length + 2, 50)
            ws.column_dimensions[column_letter].width = adjusted_width
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ BytesIO
        wb.save(output)
        output.seek(0)
        return output.getvalue()

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.markdown('<div class="main-header">üìä –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞–º–∏</div>', unsafe_allow_html=True)

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
with st.sidebar:
    st.markdown('<div class="sidebar-header">üß≠ –ù–∞–≤–∏–≥–∞—Ü–∏—è</div>', unsafe_allow_html=True)
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    st.markdown("**–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**")
    main_pages = {
        "üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ç—á–µ—Ç–∞–º": "instructions",
        "‚ö° –î–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–∞–º–∏": "actions", 
        "üè∑Ô∏è –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã –∏ —Ç–µ—Ä–º–∏–Ω—ã": "attributes",
        "üìà –î–∞—à–±–æ—Ä–¥ –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç—á–µ—Ç–æ–≤": "dashboard",
        "ü§ñ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å (–ò–ò –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç)": "ai_assistant",
        "üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å": "feedback"
    }
    
    # –î–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é:
    if 'selected_page' not in st.session_state:
        st.session_state.selected_page = "üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ç—á–µ—Ç–∞–º"
    
    for page_name in main_pages.keys():
        if st.button(page_name, key=f"btn_{main_pages[page_name]}", use_container_width=True):
            st.session_state.selected_page = page_name
    
    st.markdown("---")
    
    # –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
    st.markdown("**–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å:**")
    admin_toggle = st.checkbox("üîê –†–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", key="admin_toggle")
    st.session_state.admin_mode = admin_toggle
    
    if st.session_state.admin_mode:
        st.markdown('<span class="admin-badge">–ê–î–ú–ò–ù –†–ï–ñ–ò–ú</span>', unsafe_allow_html=True)
        st.markdown("")
        
        admin_pages = {
            "üîç –ö–æ–Ω—Ç—Ä–æ–ª—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤": "admin_control",
            "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏": "admin_stats", 
            "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã": "admin_issues"
        }
        
        # –î–ª—è –∞–¥–º–∏–Ω –º–µ–Ω—é:
        if 'selected_admin_page' not in st.session_state:
            st.session_state.selected_admin_page = "üîç –ö–æ–Ω—Ç—Ä–æ–ª—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤"
            
        for page_name in admin_pages.keys():
            if st.button(page_name, key=f"admin_btn_{admin_pages[page_name]}", use_container_width=True):
                st.session_state.selected_admin_page = page_name
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
    st.markdown("---")
    st.markdown("**‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ**")
    st.caption(f"–í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}")
    st.caption("–í–µ—Ä—Å–∏—è: 1.0.0")

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü
def show_instructions():
    st.markdown('<div class="page-header">üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ç—á–µ—Ç–∞–º</div>', unsafe_allow_html=True)
    st.markdown('<div class="coming-soon">üöß –ó–¥–µ—Å—å –±—É–¥—É—Ç —Ä–∞–∑–º–µ—â–µ–Ω—ã –ø–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –æ—Ç—á–µ—Ç–∞–º–∏</div>', unsafe_allow_html=True)

def show_actions():
    # st.markdown('<div class="page-header">‚ö° –î–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–∞–º–∏</div>', unsafe_allow_html=True)
    # st.markdown('<div class="coming-soon">üöß –ó–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Ä–∞–∑–ª–∏—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–∞–º–∏: —Å–æ–∑–¥–∞–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ</div>', unsafe_allow_html=True)

    st.markdown('<div class="page-header">‚ö° –î–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–∞–º–∏</div>', unsafe_allow_html=True)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤
    if 'action_texts' not in st.session_state:
        st.session_state.action_texts = {
            'register': '–ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π –æ—Ç—á–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–π—Ç–∏ –≤ –ë–∏–∑–Ω–µ—Å-–≥–ª–æ—Å—Å–∞—Ä–∏–π –∏ –≤ –ª–µ–≤–æ–º –º–µ–Ω—é –Ω–∞–π—Ç–∏ —Ä–∞–∑–¥–µ–ª "–ó–∞–ø—Ä–æ—Å—ã - –û—Ç—á–µ—Ç—ã". –í –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –≤—ã–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å".',
            'automate': '–ï—Å–ª–∏ —É –≤–∞—Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –æ—Ç—á–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ "–≤—Ä—É—á–Ω—É—é", –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç—Ç–æ–º –æ—Ç—á–µ—Ç–µ –≤ –ë–∏–∑–Ω–µ—Å-–≥–ª–æ—Å—Å–∞—Ä–∏–∏. –ï—Å–ª–∏ "—Ä—É—á–Ω–æ–π –æ—Ç—á–µ—Ç" –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä–µ–µ—Å—Ç—Ä–µ –æ—Ç—á–µ—Ç–æ–≤, —Ç–æ –ø—Ä–µ–∂–¥–µ, —á–µ–º –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é "—Ä—É—á–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞". –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –∑–∞—è–≤–∫–µ –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é –æ—Ç—á–µ—Ç–∞. –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä—É—á–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞/ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ ("—Ä—É—á–Ω–æ–π" –æ—Ç—á–µ—Ç –ø–æ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ–π —Ñ–æ—Ä–º–µ –Ω–µ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è —Å –°–°–ü –∏–ª–∏ –†–§). –î–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é –æ—Ç—á–µ—Ç–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –≤ –ë–∏–∑–Ω–µ—Å-–≥–ª–æ—Å—Å–∞—Ä–∏–∏: –≤ –ª–µ–≤–æ–º –º–µ–Ω—é –Ω–∞–π—Ç–∏ —Ä–∞–∑–¥–µ–ª "–ó–∞–ø—Ä–æ—Å—ã - –û—Ç—á–µ—Ç—ã". –í –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –≤—ã–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å".',
            'update': '–ß—Ç–æ–±—ã –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ—Ç—á–µ—Ç ...',
            'change_owner': '–ß—Ç–æ–±—ã —Å–º–µ–Ω–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –æ—Ç—á–µ—Ç–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å 1 –∏–∑ 2—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: 1. –ù–∞–ø—Ä–∞–≤–∏—Ç—å —Å–ª—É–∂–µ–±–Ω—É—é –∑–∞–ø–∏—Å–∫—É –≤ –∞–¥—Ä–µ—Å –î–ë–î –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ –∏–ª–∏ 2. –°–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–º–µ–Ω—É –≤–ª–∞–¥–µ–ª—å—Ü–∞ –æ—Ç—á–µ—Ç–∞ –≤ –ë–∏–∑–Ω–µ—Å-–≥–ª–æ—Å—Å–∞—Ä–∏–∏, –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —É—Ç–æ—á–Ω–∏–≤ –§–ò–û –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ, –∫—Ç–æ –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ—Ç—á–µ—Ç, —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å –µ–≥–æ –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –∑–∞–ø—Ä–æ—Å–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–¥–∞—á–∏ –æ—Ç—á–µ—Ç–∞ –Ω–æ–≤–æ–º—É –≤–ª–∞–¥–µ–ª—å—Ü—É',
            'delete': '–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –æ—Ç—á–µ—Ç, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞. –ï—Å–ª–∏ –æ—Ç—á–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω, —Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–ª–æ–∂–∏—Ç—å BIQ, —É—Ç–æ—á–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –¥–∞–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –≤ —Å–∏—Å—Ç–µ–º–µ.'
        }
    
    # –†–∞–∑–¥–µ–ª—ã —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    sections = [
        {
            'key': 'register',
            'title': '1Ô∏è‚É£ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç',
            'icon': 'üìù'
        },
        {
            'key': 'automate', 
            'title': '2Ô∏è‚É£ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç',
            'icon': 'ü§ñ'
        },
        {
            'key': 'update',
            'title': '3Ô∏è‚É£ –ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç', 
            'icon': 'üîÑ'
        },
        {
            'key': 'change_owner',
            'title': '4Ô∏è‚É£ –°–º–µ–Ω–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –æ—Ç—á–µ—Ç–∞',
            'icon': 'üë§'
        },
        {
            'key': 'delete',
            'title': '5Ô∏è‚É£ –£–¥–∞–ª–∏—Ç—å –æ—Ç—á–µ—Ç',
            'icon': 'üóëÔ∏è'
        }
    ]
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–æ–≤

    # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏
    tab_titles = [f"{section['icon']} {section['title']}" for section in sections]
    tabs = st.tabs(tab_titles)
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–∞–∂–¥–æ–π –≤–∫–ª–∞–¥–∫–∏
    for i, (tab, section) in enumerate(zip(tabs, sections)):
        key = section['key']
        title = section['title']
        icon = section['icon']
        
        with tab:
            # –ï—Å–ª–∏ –∞–¥–º–∏–Ω —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä
            if st.session_state.admin_mode:
                st.markdown('<span class="admin-badge">–†–ï–ñ–ò–ú –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø</span>', unsafe_allow_html=True)
                
                # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                edited_text = st.text_area(
                    f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç:",
                    value=st.session_state.action_texts[key],
                    height=200,
                    key=f"edit_{key}",
                    help="–í –∞–¥–º–∏–Ω —Ä–µ–∂–∏–º–µ –≤—ã –º–æ–∂–µ—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç"
                )
                
                # –ö–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —Å–±—Ä–æ—Å–∞
                col1, col2, col3 = st.columns([1, 1, 4])
                
                with col1:
                    if st.button(f"üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", key=f"save_{key}", type="primary"):
                        st.session_state.action_texts[key] = edited_text
                        st.success("‚úÖ –¢–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
                        st.rerun()
                
                with col2:
                    if st.button(f"üîÑ –°–±—Ä–æ—Å–∏—Ç—å", key=f"reset_{key}"):
                        st.warning("‚ö†Ô∏è –°–±—Ä–æ—Å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É")
                        st.rerun()
            
            else:
                # –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º - –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç
                st.markdown(f"""
                <div style="
                    background-color: #f8f9fa;
                    padding: 1.5rem;
                    border-radius: 0.5rem;
                    border-left: 4px solid #1f77b4;
                    margin-bottom: 1rem;
                ">
                    <p style="margin: 0; line-height: 1.6;">{st.session_state.action_texts[key]}</p>
                </div>
                """, unsafe_allow_html=True)
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    st.markdown("### üìû –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?")
    st.info("""
    **–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ª—é–±–æ–º—É –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π:**
    - üìß –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞ email: support@company.com
    - üìû –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É: +7 (xxx) xxx-xx-xx
    - üí¨ –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ä–∞–∑–¥–µ–ª–æ–º "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å (–ò–ò –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç)"
    """)
    
    # –ê–¥–º–∏–Ω –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    if st.session_state.admin_mode:
        st.markdown("---")
        st.markdown("### üîß –ê–¥–º–∏–Ω –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        st.markdown('<span class="admin-badge">–ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨</span>', unsafe_allow_html=True)
        
        col1, col2 = st.columns(2)
        with col1:
            st.metric("–í—Å–µ–≥–æ —Ä–∞–∑–¥–µ–ª–æ–≤", len(sections))
        with col2:
            # –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–∏–º–≤–æ–ª–æ–≤ –≤–æ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–∞—Ö
            total_chars = sum(len(text) for text in st.session_state.action_texts.values())
            st.metric("–û–±—â–∏–π –æ–±—ä–µ–º —Ç–µ–∫—Å—Ç–∞", f"{total_chars} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –ö–Ω–æ–ø–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤
        if st.button("üì§ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ç–µ–∫—Å—Ç—ã", key="export_all_texts"):
            export_data = {
                "exported_at": datetime.now().isoformat(),
                "sections": []
            }
            
            for section in sections:
                export_data["sections"].append({
                    "title": section["title"],
                    "key": section["key"],
                    "text": st.session_state.action_texts[section["key"]]
                })
            
            import json
            json_string = json.dumps(export_data, ensure_ascii=False, indent=2)
            
            st.download_button(
                label="üíæ –°–∫–∞—á–∞—Ç—å JSON —Å —Ç–µ–∫—Å—Ç–∞–º–∏",
                data=json_string,
                file_name=f"action_texts_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json",
                mime="application/json"
            )

def show_attributes():
    st.markdown('<div class="page-header">üè∑Ô∏è –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã –∏ —Ç–µ—Ä–º–∏–Ω—ã</div>', unsafe_allow_html=True)
    st.markdown("### –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Excel –≤ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤")
    st.markdown("---")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session state –¥–ª—è –∞—Ç—Ä–∏–±—É—Ç–æ–≤
    if 'attr_file_processed' not in st.session_state:
        st.session_state.attr_file_processed = False
    if 'attr_transformer' not in st.session_state:
        st.session_state.attr_transformer = None
    if 'attr_df' not in st.session_state:
        st.session_state.attr_df = None
    if 'attr_uploaded_file_name' not in st.session_state:
        st.session_state.attr_uploaded_file_name = ""
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    col1, col2 = st.columns([2, 1])
    
    with col2:
        st.header("üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞")
        uploaded_file = st.file_uploader(
            "–í—ã–±–µ—Ä–∏—Ç–µ Excel –∏–ª–∏ CSV —Ñ–∞–π–ª",
            type=['xlsx', 'xls', 'csv'],
            help="–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: Excel (.xlsx, .xls) –∏ CSV (.csv)",
            key="attributes_file_uploader"
        )
    
    with col1:
        st.header("‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã")
        report_number = st.text_input(
            "–ù–æ–º–µ—Ä –æ—Ç—á–µ—Ç–∞",
            value="R001",
            help="–≠—Ç–æ—Ç –Ω–æ–º–µ—Ä –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–æ–≤ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞",
            key="attributes_report_number"
        )
        
        report_type = st.selectbox(
            "–¢–∏–ø –æ—Ç—á–µ—Ç–∞",
            options=["–†—É—á–Ω–æ–π", "–ü–æ–ª—É–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π", "–ò–õ–ê"],
            help="–¢–∏–ø –æ—Ç—á–µ—Ç–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª–µ–π –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö",
            key="attributes_report_type"
        )
    
    if uploaded_file is not None:
        st.session_state.attr_uploaded_file_name = uploaded_file.name
        
        # –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä
        transformer = ExcelTransformer(report_number=report_number)
        
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            df = transformer.load_from_uploaded_file(uploaded_file)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ session state
            st.session_state.attr_transformer = transformer
            st.session_state.attr_df = df
            st.session_state.attr_file_processed = True
            
            st.success("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
            col1, col2, col3 = st.columns(3)
            with col1:
                st.metric("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫", len(df))
            with col2:
                st.metric("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤", len(df.columns))
            with col3:
                st.metric("–ù–æ–º–µ—Ä –æ—Ç—á–µ—Ç–∞", report_number)
            
            # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –∞—Ç—Ä–∏–±—É—Ç–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞
            st.markdown("---")
            if st.button("üîÑ –í—ã–≥—Ä—É–∑–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç–Ω—ã–π —Å–æ—Å—Ç–∞–≤", type="primary", use_container_width=True, key="generate_attributes"):
                with st.spinner("–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö..."):
                    # –°–±—Ä–æ—Å —É–∫–∞–∑–∞—Ç–µ–ª—è —Ñ–∞–π–ª–∞ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
                    uploaded_file.seek(0)
                    df_fresh = transformer.load_from_uploaded_file(uploaded_file)
                    metadata_df = transformer.transform_to_metadata(df_fresh, report_type)
                    
                    # –°–æ–∑–¥–∞–µ–º Excel —Ñ–∞–π–ª –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                    excel_data = transformer.create_excel_download(metadata_df)
                    
                    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞
                    filename = f"{report_number}_–∞—Ç—Ä–∏–±—É—Ç—ã.xlsx"
                    
                    st.success("‚úÖ –ê—Ç—Ä–∏–±—É—Ç–Ω—ã–π —Å–æ—Å—Ç–∞–≤ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                    col1, col2, col3 = st.columns(3)
                    with col1:
                        st.metric("–°–æ–∑–¥–∞–Ω–æ –∞—Ç—Ä–∏–±—É—Ç–æ–≤", len(metadata_df))
                    with col2:
                        st.metric("–¢–∏–ø –æ—Ç—á–µ—Ç–∞", report_type)
                    with col3:
                        type_stats = metadata_df['base_type_report_field'].value_counts()
                        most_common_type = type_stats.index[0] if len(type_stats) > 0 else "N/A"
                        st.metric("–û—Å–Ω–æ–≤–Ω–æ–π —Ç–∏–ø", most_common_type)
                    
                    # –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                    st.download_button(
                        label="üì• –°–∫–∞—á–∞—Ç—å –∞—Ç—Ä–∏–±—É—Ç–Ω—ã–π —Å–æ—Å—Ç–∞–≤",
                        data=excel_data,
                        file_name=filename,
                        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                        type="primary",
                        use_container_width=True,
                        key="download_attributes"
                    )
                    
                    st.info("üí° **–°–æ–≤–µ—Ç**: –§–∞–π–ª –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å, –∑–∞–ø–æ–ª–Ω–∏–≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏. –ê —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è")
        
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {str(e)}")

def show_dashboard():
    st.markdown('<div class="page-header">üìà –î–∞—à–±–æ—Ä–¥ –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç—á–µ—Ç–æ–≤</div>', unsafe_allow_html=True)
    st.markdown('<div class="coming-soon">üöß –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –º–µ—Ç—Ä–∏–∫–∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç—á–µ—Ç–æ–≤</div>', unsafe_allow_html=True)

def show_ai_assistant():
    st.markdown('<div class="page-header">ü§ñ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å (–ò–ò –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç)</div>', unsafe_allow_html=True)
    st.markdown('<div class="coming-soon">üöß –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã</div>', unsafe_allow_html=True)

def show_feedback():
    st.markdown('<div class="page-header">üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å</div>', unsafe_allow_html=True)
    st.markdown('<div class="coming-soon">üöß –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ñ–æ—Ä–º–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π</div>', unsafe_allow_html=True)

def show_admin_control():
    st.markdown('<div class="page-header">üîç –ö–æ–Ω—Ç—Ä–æ–ª—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤</div>', unsafe_allow_html=True)
    st.markdown('<span class="admin-badge">–ê–î–ú–ò–ù</span>', unsafe_allow_html=True)
    
    from utils import display_request_analysis
    
    st.markdown("## üìä –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ —Å—Ç–∞–¥–∏–π —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è")
    st.info("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å –∑–∞–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –∏ —Ç–µ–∫—É—â–∏—Ö —Å—Ç–∞–¥–∏–π")
    
    display_request_analysis()

def show_admin_stats():
    st.markdown('<div class="page-header">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</div>', unsafe_allow_html=True)
    st.markdown('<span class="admin-badge">–ê–î–ú–ò–ù</span>', unsafe_allow_html=True)
    st.markdown('<div class="coming-soon">üöß –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ –ø—É–±–ª–∏–∫–∞—Ü–∏—è–º</div>', unsafe_allow_html=True)

def show_admin_issues():
    st.markdown('<div class="page-header">‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã</div>', unsafe_allow_html=True)
    st.markdown('<span class="admin-badge">–ê–î–ú–ò–ù</span>', unsafe_allow_html=True)
    st.markdown('<div class="coming-soon">üöß –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏</div>', unsafe_allow_html=True)

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
if st.session_state.admin_mode and 'selected_admin_page' in st.session_state:
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    page_map = {
        "üîç –ö–æ–Ω—Ç—Ä–æ–ª—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤": show_admin_control,
        "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏": show_admin_stats, 
        "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã": show_admin_issues
    }
    page_map[st.session_state.selected_admin_page]()
else:
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    page_map = {
        "üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ç—á–µ—Ç–∞–º": show_instructions,
        "‚ö° –î–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–∞–º–∏": show_actions,
        "üè∑Ô∏è –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã –∏ —Ç–µ—Ä–º–∏–Ω—ã": show_attributes,
        "üìà –î–∞—à–±–æ—Ä–¥ –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç—á–µ—Ç–æ–≤": show_dashboard,
        "ü§ñ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å (–ò–ò –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç)": show_ai_assistant,
        "üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å": show_feedback
    }
    page_map[st.session_state.selected_page]()

# –ü–æ–¥–≤–∞–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.markdown("---")
col1, col2, col3 = st.columns(3)
with col1:
    st.caption("üè¢ –ö–æ–º–ø–∞–Ω–∏—è XYZ")
with col2:
    st.caption("üìß support@company.com")
with col3:
    st.caption("üìû +7 (xxx) xxx-xx-xx")
